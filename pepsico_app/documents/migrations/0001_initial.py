# Generated by Django 4.2.24 on 2025-09-23 22:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CECO',
            fields=[
                ('id_ceco', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'CECO',
            },
        ),
        migrations.CreateModel(
            name='FlotaUser',
            fields=[
                ('id_user', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('observations', models.TextField()),
                ('gpid', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'FlotaUsers',
            },
        ),
        migrations.CreateModel(
            name='Ingreso',
            fields=[
                ('id_ingreso', models.AutoField(primary_key=True, serialize=False)),
                ('entry_datetime', models.DateTimeField()),
                ('exit_datetime', models.DateTimeField(blank=True, null=True)),
                ('observations', models.TextField(blank=True, null=True)),
                ('authorization', models.BooleanField()),
                ('chofer', models.ForeignKey(db_column='chofer_id', on_delete=django.db.models.deletion.CASCADE, to='documents.flotauser')),
            ],
            options={
                'db_table': 'Ingresos',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id_role', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_supervisor_role', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Role',
            },
        ),
        migrations.CreateModel(
            name='SAPEquipment',
            fields=[
                ('id_equipment', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'SAPEquipment',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id_service_type', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ServiceTypes',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id_site', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('patent_count', models.IntegerField()),
            ],
            options={
                'db_table': 'Sites',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id_task', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('urgency', models.CharField(max_length=20)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('ingreso', models.ForeignKey(db_column='ingreso_id', on_delete=django.db.models.deletion.CASCADE, to='documents.ingreso')),
                ('service_type', models.ForeignKey(db_column='service_type_id', on_delete=django.db.models.deletion.CASCADE, to='documents.servicetype')),
                ('supervisor', models.ForeignKey(blank=True, db_column='supervisor_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='documents.flotauser')),
            ],
            options={
                'db_table': 'Tasks',
            },
        ),
        migrations.CreateModel(
            name='UserStatus',
            fields=[
                ('id_status', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'UserStatus',
            },
        ),
        migrations.CreateModel(
            name='VehicleStatus',
            fields=[
                ('id_status', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'VehicleStatus',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id_type', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('data', models.CharField(max_length=50)),
                ('site', models.ForeignKey(db_column='site_id', on_delete=django.db.models.deletion.CASCADE, to='documents.site')),
            ],
            options={
                'db_table': 'VehicleTypes',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('patent', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('brand', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
                ('age', models.IntegerField()),
                ('useful_life', models.IntegerField()),
                ('mileage', models.IntegerField(blank=True, null=True)),
                ('operational', models.BooleanField()),
                ('backup', models.BooleanField()),
                ('out_of_service', models.BooleanField()),
                ('plan', models.BooleanField()),
                ('sinister', models.BooleanField()),
                ('observations', models.TextField()),
                ('compliance', models.CharField(max_length=50)),
                ('tct', models.CharField(blank=True, max_length=50, null=True)),
                ('geotab_confirm', models.BooleanField()),
                ('auction', models.BooleanField()),
                ('ceco', models.ForeignKey(db_column='ceco_id', on_delete=django.db.models.deletion.CASCADE, to='documents.ceco')),
                ('equipment', models.ForeignKey(db_column='equipment_id', on_delete=django.db.models.deletion.CASCADE, to='documents.sapequipment')),
                ('site', models.ForeignKey(db_column='site_id', on_delete=django.db.models.deletion.CASCADE, to='documents.site')),
                ('status', models.ForeignKey(blank=True, db_column='status_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='documents.vehiclestatus')),
                ('type', models.ForeignKey(db_column='type_id', on_delete=django.db.models.deletion.CASCADE, to='documents.vehicletype')),
            ],
            options={
                'db_table': 'Vehicles',
            },
        ),
        migrations.CreateModel(
            name='TaskAssignment',
            fields=[
                ('id_assignment', models.AutoField(primary_key=True, serialize=False)),
                ('task', models.ForeignKey(db_column='task_id', on_delete=django.db.models.deletion.CASCADE, to='documents.task')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='documents.flotauser')),
            ],
            options={
                'db_table': 'TaskAssignments',
            },
        ),
        migrations.AddField(
            model_name='servicetype',
            name='site',
            field=models.ForeignKey(db_column='site_id', on_delete=django.db.models.deletion.CASCADE, to='documents.site'),
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id_route', models.AutoField(primary_key=True, serialize=False)),
                ('route_code', models.CharField(max_length=50)),
                ('gtm', models.CharField(max_length=50)),
                ('comment', models.TextField()),
                ('driver', models.ForeignKey(blank=True, db_column='driver_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='documents.flotauser')),
                ('truck', models.ForeignKey(db_column='truck_patent', on_delete=django.db.models.deletion.CASCADE, to='documents.vehicle')),
            ],
            options={
                'db_table': 'Routes',
            },
        ),
        migrations.CreateModel(
            name='Repuesto',
            fields=[
                ('id_repuesto', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('quantity', models.IntegerField()),
                ('delivery_datetime', models.DateTimeField()),
                ('task', models.ForeignKey(blank=True, db_column='task_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='documents.task')),
            ],
            options={
                'db_table': 'Repuestos',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id_report', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=50)),
                ('generated_datetime', models.DateTimeField()),
                ('data', models.JSONField()),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='documents.flotauser')),
            ],
            options={
                'db_table': 'Reports',
            },
        ),
        migrations.CreateModel(
            name='Pause',
            fields=[
                ('id_pause', models.AutoField(primary_key=True, serialize=False)),
                ('motivo', models.CharField(max_length=100)),
                ('duration', models.IntegerField()),
                ('authorization', models.BooleanField()),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('assignment', models.ForeignKey(db_column='assignment_id', on_delete=django.db.models.deletion.CASCADE, to='documents.taskassignment')),
            ],
            options={
                'db_table': 'Pauses',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id_notification', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('sent_datetime', models.DateTimeField()),
                ('type', models.CharField(max_length=50)),
                ('recipient', models.ForeignKey(db_column='recipient_id', on_delete=django.db.models.deletion.CASCADE, to='documents.flotauser')),
            ],
            options={
                'db_table': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceSchedule',
            fields=[
                ('id_schedule', models.AutoField(primary_key=True, serialize=False)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('recurrence_rule', models.CharField(blank=True, max_length=255, null=True)),
                ('reminder_minutes', models.IntegerField(blank=True, null=True)),
                ('observations', models.TextField(blank=True, null=True)),
                ('assigned_user', models.ForeignKey(blank=True, db_column='assigned_user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='documents.flotauser')),
                ('patent', models.ForeignKey(db_column='patent', on_delete=django.db.models.deletion.CASCADE, to='documents.vehicle')),
                ('service_type', models.ForeignKey(db_column='service_type_id', on_delete=django.db.models.deletion.CASCADE, to='documents.servicetype')),
                ('status', models.ForeignKey(db_column='status_id', on_delete=django.db.models.deletion.CASCADE, to='documents.userstatus')),
                ('supervisor', models.ForeignKey(blank=True, db_column='supervisor_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_schedules', to='documents.flotauser')),
            ],
            options={
                'db_table': 'MaintenanceSchedules',
            },
        ),
        migrations.AddField(
            model_name='ingreso',
            name='patent',
            field=models.ForeignKey(db_column='patent', on_delete=django.db.models.deletion.CASCADE, to='documents.vehicle'),
        ),
        migrations.AddField(
            model_name='ingreso',
            name='service_type',
            field=models.ForeignKey(db_column='service_type_id', on_delete=django.db.models.deletion.CASCADE, to='documents.servicetype'),
        ),
        migrations.AddField(
            model_name='ingreso',
            name='supervisor',
            field=models.ForeignKey(blank=True, db_column='supervisor_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_ingresos', to='documents.flotauser'),
        ),
        migrations.AddField(
            model_name='flotauser',
            name='patent',
            field=models.ForeignKey(db_column='patent', on_delete=django.db.models.deletion.CASCADE, to='documents.vehicle'),
        ),
        migrations.AddField(
            model_name='flotauser',
            name='role',
            field=models.ForeignKey(db_column='role_id', on_delete=django.db.models.deletion.CASCADE, to='documents.role'),
        ),
        migrations.AddField(
            model_name='flotauser',
            name='status',
            field=models.ForeignKey(db_column='status_id', on_delete=django.db.models.deletion.CASCADE, to='documents.userstatus'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id_document', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=50)),
                ('file_path', models.CharField(max_length=255)),
                ('upload_datetime', models.DateTimeField()),
                ('ingreso', models.ForeignKey(db_column='ingreso_id', on_delete=django.db.models.deletion.CASCADE, to='documents.ingreso')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='documents.flotauser')),
            ],
            options={
                'db_table': 'Documents',
            },
        ),
    ]
